version: '3.9'

services:
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  drive-watcher:
    image: riparr/drive-watcher:latest
    container_name: drive-watcher
    environment:
      - WATCH_PATH=/data
      - REDIS_URL=redis://redis:6379
       - ENABLE_ENHANCE=true
      - ESRGAN_PROFILE=amd-4x-med-vram4
      - GPU_VENDOR=amd
      - ENHANCED_OUTPUT_DIR=/data/enhanced
      - MODELS_DIR=/models
      - CPU_FALLBACK=false
       - MKV_OUTPUT_DIR=/data/rips
       - TITLE_SELECTION=all
       - SUBTITLE_POLICY=retain
       - AUDIO_POLICY=retain
    volumes:
      - data-volume:/data
      - logs-volume:/logs/drive-watcher
    depends_on:
      - redis

  rip-worker:
    build: ./services/rip_worker
    container_name: rip-worker
    environment:
      - REDIS_URL=redis://redis:6379
       - ENABLE_ENHANCE=true
      - ESRGAN_PROFILE=amd-4x-med-vram4
      - GPU_VENDOR=amd
      - ENHANCED_OUTPUT_DIR=/data/enhanced
      - MODELS_DIR=/models
      - CPU_FALLBACK=false
       - MKV_OUTPUT_DIR=/data/rips
       - TITLE_SELECTION=all
       - SUBTITLE_POLICY=retain
       - AUDIO_POLICY=retain
      
    volumes:
      - data-volume:/data
      - models-volume:/models
      - logs-volume:/logs/rip-worker
    depends_on:
      - redis
      - drive-watcher

  enhance-worker:
    build: ./services/enhance_worker
    container_name: enhance-worker
    environment:
      - REDIS_URL=redis://redis:6379
       - ENABLE_ENHANCE=true
      - ESRGAN_PROFILE=amd-4x-med-vram4
      - GPU_VENDOR=amd
      - ENHANCED_OUTPUT_DIR=/data/enhanced
      - MODELS_DIR=/models
      - CPU_FALLBACK=false
       - MKV_OUTPUT_DIR=/data/rips
       - TITLE_SELECTION=all
       - SUBTITLE_POLICY=retain
       - AUDIO_POLICY=retain
      
    volumes:
      - data-volume:/data
      - models-volume:/models
    devices:
      - /dev/dri:/dev/dri
      - logs-volume:/logs/enhance-worker
    depends_on:
      - redis
      - rip-worker

  transcode-worker:
    build: ./services/transcode_worker
    container_name: transcode-worker
    environment:
      - REDIS_URL=redis://redis:6379
       - ENABLE_TRANSCODE=true
       - VAAPI_PROFILE=hevc_vaapi
       - TRANSCODE_PROFILE=high
       - ENHANCED_OUTPUT_DIR=/data/enhanced
       - TRANSCODED_OUTPUT_DIR=/data/transcoded
       - CPU_FALLBACK=false
       - AUDIO_FORMAT=aac
    volumes:
      - data-volume:/data
      - logs-volume:/logs/transcode-worker
    devices:
      - /dev/dri:/dev/dri
    depends_on:
      - redis
      - enhance-worker

  metadata-worker:
    image: riparr/metadata-worker:latest
    container_name: metadata-worker
    environment:
      - REDIS_URL=redis://redis:6379
       - ENABLE_ENHANCE=true
      - ESRGAN_PROFILE=amd-4x-med-vram4
      - GPU_VENDOR=amd
      - ENHANCED_OUTPUT_DIR=/data/enhanced
      - MODELS_DIR=/models
      - CPU_FALLBACK=false
       - MKV_OUTPUT_DIR=/data/rips
       - TITLE_SELECTION=all
       - SUBTITLE_POLICY=retain
       - AUDIO_POLICY=retain
    volumes:
      - data-volume:/data
      - logs-volume:/logs/metadata-worker
    networks:
      - backend
      - data
    depends_on:
      - redis
      - rip-worker

  blackhole:
    build: ./services/blackhole_integration
    container_name: blackhole
    environment:
      - REDIS_URL=${REDIS_URL}
      - ENABLE_BLACKHOLE=${ENABLE_BLACKHOLE}
      - BLACKHOLE_PATH=${BLACKHOLE_PATH}
      - CLEANUP=${CLEANUP}
    labels:
      - "com.docker.compose.project=riparr"
      - "io.portainer.accesscontrol.teams=admin"
    volumes:
      - data-volume:/data
      - blackhole-volume:/media/plex
      - logs-volume:/logs/blackhole
    networks:
      - backend
      - data
    depends_on:
      - redis
      - metadata-worker

  ui-gateway:
    image: riparr/ui-gateway:latest
    container_name: ui-gateway
    environment:
      - PORT=${UI_PORT}
    labels:
      - "com.docker.compose.project=riparr"
      - "io.portainer.accesscontrol.teams=admin"
    ports:
      - "${UI_PORT}:${UI_PORT}"
    volumes:
      - logs-volume:/logs/ui-gateway
    networks:
      - frontend
      - backend
    depends_on:
      - orchestrator

  log-stream:
    image: riparr/log-stream:latest
    container_name: log-stream
    environment:
      - REDIS_URL=${REDIS_URL}
      - ENABLE_ENHANCE=${ENABLE_ENHANCE}
      - ESRGAN_PROFILE=${ESRGAN_PROFILE}
      - GPU_VENDOR=${GPU_VENDOR}
      - ENHANCED_OUTPUT_DIR=${ENHANCED_OUTPUT_DIR}
      - MODELS_DIR=${MODELS_DIR}
      - CPU_FALLBACK=${CPU_FALLBACK}
      - MKV_OUTPUT_DIR=${MKV_OUTPUT_DIR}
      - TITLE_SELECTION=${TITLE_SELECTION}
      - SUBTITLE_POLICY=${SUBTITLE_POLICY}
      - AUDIO_POLICY=${AUDIO_POLICY}
    labels:
      - "com.docker.compose.project=riparr"
      - "io.portainer.accesscontrol.teams=admin"
    ports:
      - "${LOG_STREAM_PORT}:9000"
    volumes:
      - logs-volume:/logs/log-stream
    networks:
      - frontend
      - backend
    depends_on:
      - redis

  orchestrator:
    build: ./services/orchestrator
    container_name: orchestrator
    environment:
      - REDIS_URL=${REDIS_URL}
      - CONFIG_PATH=${CONFIG_PATH}
    labels:
      - "com.docker.compose.project=riparr"
      - "io.portainer.accesscontrol.teams=admin"
    volumes:
      - ./config.yaml:/config/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - logs-volume:/logs/orchestrator
    networks:
      - backend
    depends_on:
      - redis

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    environment:
      - MODEL=${OLLAMA_MODEL}
      - VAAPI=${VAAPI}
    labels:
      - "com.docker.compose.project=riparr"
      - "io.portainer.accesscontrol.teams=admin"
    ports:
      - "${OLLAMA_PORT}:11434"
    volumes:
      - models-volume:/models
    devices:
      - /dev/dri:/dev/dri
    networks:
      - backend

networks:
  frontend:
    driver: bridge
    labels:
      - "com.docker.compose.project=riparr"
  backend:
    driver: bridge
    internal: true
    labels:
      - "com.docker.compose.project=riparr"
  data:
    driver: bridge
    internal: true
    labels:
      - "com.docker.compose.project=riparr"

volumes:
  data-volume:
    driver: local
    labels:
      - "com.docker.compose.project=riparr"
  models-volume:
    driver: local
    labels:
      - "com.docker.compose.project=riparr"
  logs-volume:
    driver: local
    labels:
      - "com.docker.compose.project=riparr"
  redis-data:
    driver: local
    labels:
      - "com.docker.compose.project=riparr"
  config-volume:
    driver: local
    labels:
      - "com.docker.compose.project=riparr"
  blackhole-volume:
    driver: local
    labels:
      - "com.docker.compose.project=riparr"